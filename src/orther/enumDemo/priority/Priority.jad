// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   Priority.java

package orther.enumDemo.priority;

import java.io.PrintStream;

public final class Priority extends Enum
{

    public static Priority[] values()
    {
        return (Priority[])$VALUES.clone();
    }

    public static Priority valueOf(String s)
    {
        return (Priority)Enum.valueOf(orther/enumDemo/priority/Priority, s);
    }

    private Priority(String s, int i, int j)  // 真正构造的函数，自定义的value会放在name 和 ordinal之后
    {
        super(s, i);
        value = j;
    }

    public static void main(String args[])
    {
        Priority apriority[] = values();
        int i = apriority.length;
        for(int j = 0; j < i; j++)
        {
            Priority priority = apriority[j];
            System.out.println((new StringBuilder()).append(priority).append(":").append(priority.value).toString());
        }

    }

    public static final Priority MAX;
    public static final Priority NORM;
    public static final Priority MIN;
    private int value;
    private static final Priority $VALUES[];

    static 
    {
        MAX = new Priority("MAX", 0, 10);
        NORM = new Priority("NORM", 1, 5);
        MIN = new Priority("MIN", 2, 1);
        $VALUES = (new Priority[] {
            MAX, NORM, MIN
        });
    }
}
